events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.tailwindcss.com https://cdnjs.cloudflare.com https://fonts.googleapis.com; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com https://cdnjs.cloudflare.com https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: https:; connect-src 'self'; frame-src 'none'; object-src 'none';" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Upstream servers (if needed)
    # upstream backend {
    #     server backend:3000;
    # }

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Security: Hide nginx version
        server_tokens off;

        # Handle client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }

        # Cache HTML files
        location ~* \.(html|htm)$ {
            expires 1h;
            add_header Cache-Control "public";
        }

        # API rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            # proxy_pass http://backend;
        }

        # Login rate limiting
        location /login {
            limit_req zone=login burst=5 nodelay;
        }

        # Prevent access to sensitive files
        location ~ /\. {
            deny all;
        }

        location ~* \.(bak|backup|old|orig|save|swp|tmp|log|conf|config|ini|cfg)$ {
            deny all;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            internal;
        }

        location = /50x.html {
            internal;
        }
    }

    # HTTPS server (uncomment if you have SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     root /usr/share/nginx/html;
    #     index index.html index.htm;
    #
    #     # SSL configuration
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # Security headers for HTTPS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #
    #     # Same location blocks as HTTP server
    #     location / {
    #         try_files $uri $uri/ /index.html;
    #     }
    #
    #     location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #         add_header Vary Accept-Encoding;
    #     }
    #
    #     location ~* \.(html|htm)$ {
    #         expires 1h;
    #         add_header Cache-Control "public";
    #     }
    #
    #     location ~ /\. {
    #         deny all;
    #     }
    #
    #     location ~* \.(bak|backup|old|orig|save|swp|tmp|log|conf|config|ini|cfg)$ {
    #         deny all;
    #     }
    #
    #     error_page 404 /404.html;
    #     error_page 500 502 503 504 /50x.html;
    #
    #     location = /404.html {
    #         internal;
    #     }
    #
    #     location = /50x.html {
    #         internal;
    #     }
    # }

    # Redirect HTTP to HTTPS (uncomment if using HTTPS)
    # server {
    #     listen 80;
    #     server_name localhost;
    #     return 301 https://$server_name$request_uri;
    # }
} 